# -*- coding: utf-8 -*-
"""proyecto-discretas.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1JEiYBzpN5Pf5alvjOBZDLvyRH0qwmjj1

Inicio del proyecto

Leyendo el archivo excel donde est치n los datos de las aristas
"""

import pandas as pd
import networkx as nx
import matplotlib.pyplot as plt
url = 'https://github.com/dilanerey06/discretas-project/blob/main/edges.xlsx?raw=true'
df = pd.read_excel(url,header=None,names=None,usecols=None, index_col=None)
dfList = df.to_dict("records")
edges = []
for element in dfList:
  arr = []
  for key in element:
    el = 0
    #Como contiene algunos errores de q se a침ade con '/xa0' algunos campos entonces se eliminan y se convierten en float o int dependiendo de que tipo sea
    if isinstance(element[key], str):
      if(key == 2):
        el = float(element[key].strip().replace(',','.'))
      else:
        el = int(element[key].strip())
    else:
      el = element[key] 
    arr.append(el)
  edges.append(tuple(arr))
print(edges)

"""Creaci칩n del grafo"""

G = nx.Graph()
G.add_weighted_edges_from(edges) # A침ade las aristas directamente con peso (Se puede crear el arreglo antes y luego pasarlo)
nx.draw_kamada_kawai(G, with_labels=True, font_weight='regular', node_size=300)

"""Hallando rutas mas cortas con el metodo dijkstra_path de la libreria networkx"""

ruta_corta = nx.dijkstra_path(G,source=1,target=27,weight=True)
print(ruta_corta)
ruta_corta2 = nx.dijkstra_path(G,source=1,target=36,weight=True)
print(ruta_corta2)
ruta_corta3 = nx.dijkstra_path(G,source=3,target=26,weight=True)
print(ruta_corta3)
ruta_corta4 = nx.dijkstra_path(G,source=23,target=6,weight=True)
print(ruta_corta4)
ruta_corta5 = nx.dijkstra_path(G,source=16,target=44,weight=True)
print(ruta_corta5)